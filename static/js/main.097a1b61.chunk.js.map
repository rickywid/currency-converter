{"version":3,"sources":["currencies.tsx","App.tsx","const.ts","serviceWorker.ts","index.tsx"],"names":["currencies","name","flag","App","useState","amount","setAmount","toCurrency","setToCurrency","fromCurrency","setFromCurrency","currencyConversion","setCurrencyConversion","error","setError","useEffect","validate","getConversion","e","a","fetch","process","parseSelectOption","req","json","res","conversion_rates","console","log","val","symbol","split","trim","test","display","boxSizing","height","background","clipPath","position","marginTop","base","md","as","size","top","left","right","textAlign","color","justifyContent","marginRight","marginLeft","width","borderBottom","boxShadow","borderRadius","paddingTop","paddingLeft","paddingRight","paddingBottom","flex","marginBottom","id","fontWeight","pointerEvents","fontSize","onChange","target","value","placeholder","maxLength","required","map","currency","i","alignItems","bg","onClick","_hover","cursor","Math","round","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8UA6JeA,EAxJiB,CAC5B,CAAEC,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,eAAgBC,KAAM,4BAC9B,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,iCAAkCC,KAAM,4BAChD,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,8BAA4BC,KAAM,4BAC1C,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,oBAAqBC,KAAM,4BACnC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,8BAA+BC,KAAM,4BAC7C,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,+BAAgCC,KAAM,4BAC9C,CAAED,KAAM,mBAAoBC,KAAM,4BAClC,CAAED,KAAM,4BAA6BC,KAAM,4BAC3C,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,aAAcC,KAAM,4BAC5B,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,8BAA+BC,KAAM,4BAC7C,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,oBAAqBC,KAAM,4BACnC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,gBAAiBC,KAAM,4BAC/B,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,4BAA6BC,KAAM,4BAC3C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,mBAAoBC,KAAM,4BAClC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,+BAAgCC,KAAM,4BAC9C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,4BAA6BC,KAAM,4BAC3C,CAAED,KAAM,gCAAiCC,KAAM,4BAC/C,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,sBAAuBC,KAAM,4BACrC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,6BAA8BC,KAAM,4BAC5C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,kBAAmBC,KAAM,4BACjC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,4BAA6BC,KAAM,4BAC3C,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,qBAAsBC,KAAM,4BACpC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,0BAA2BC,KAAM,4BACzC,CAAED,KAAM,yBAA0BC,KAAM,4BACxC,CAAED,KAAM,kBAAmBC,KAAM,4BACjC,CAAED,KAAM,uBAAwBC,KAAM,4BACtC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,8BAA4BC,KAAM,4BAC1C,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,wBAAyBC,KAAM,4BACvC,CAAED,KAAM,oBAAqBC,KAAM,4BACnC,CAAED,KAAM,2BAA4BC,KAAM,4BAC1C,CAAED,KAAM,uBAAwBC,KAAM,6B,OCsJ3BC,MA3Rf,WAEE,MAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAiB,mBAArD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAiB,yBAAzD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAoDN,qBAApD,mBAAOO,EAAP,KAA2BC,EAA3B,KACA,EAA0BR,mBAAiB,IAA3C,mBAAOS,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR,IACEC,IACAC,IACA,MAAOC,GACPJ,EAASI,GACTZ,EAAU,OAEX,CAACD,EAAQI,EAAcF,IAE1B,IAUMU,EAAa,uCAAG,8BAAAE,EAAA,+EAEAC,MAAM,GAAD,OCnDL,qCDmDK,YAAgBC,2BAAhB,mBAAwDC,EAAkBb,GAAc,IAAS,QAFtG,cAEZc,EAFY,gBAGAA,EAAIC,OAHJ,OAGZC,EAHY,OAIlBb,EAAsBa,EAAIC,iBAAiBJ,EAAkBf,GAAY,IAAS,QAJhE,kDAMlBoB,QAAQC,IAAR,MANkB,0DAAH,qDAUbN,EAAoB,SAACO,EAAaC,GACtC,GAAKD,EACL,OAAOC,EAASD,EAAIE,MAAM,KAAK,GAAGC,OAASH,EAAIE,MAAM,KAAK,GAAGC,QAGzDhB,EAAW,WAEf,IADc,gBAAgBiB,KAAK5B,GACrB,KAAM,+BAgCtB,OACE,qCACE,cAAC,IAAD,CACE6B,QAAQ,QACRC,UAAU,aACVC,OAAO,OACPC,WAAW,kEACXC,SAAS,kCAGX,eAAC,IAAD,CACEC,SAAS,WACTC,UAAW,CAAEC,KAAM,SAAUC,GAAI,QAFnC,UAIE,cAAC,IAAD,CACEC,GAAG,KACHC,KAAK,KACLL,SAAS,WACTM,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,UAAU,SACVC,MAAM,QARR,gCAUA,eAAC,IAAD,CACEf,QAAQ,OACRgB,eAAe,SACfX,SAAS,WACTO,KAAM,EACNC,MAAO,EACPF,IAAK,GACLM,YAAa,CAAEV,KAAM,QACrBW,WAAY,CAAEX,KAAM,QACpBY,MAAM,MATR,UAWE,cAAC,IAAD,CAAQF,YAAa,EAArB,SACE,cAAC,IAAD,CACEP,KAAK,OACLP,WAAW,UACXiB,aAAa,oBACbL,MAAM,QAJR,oBASF,cAAC,IAAD,CAAQE,YAAa,EAArB,SACE,cAAC,IAAD,CACEP,KAAK,OACLP,WAAW,UACXiB,aAAa,oBACbL,MAAM,QAJR,sBASF,cAAC,IAAD,CAAQE,YAAa,EAArB,SACE,cAAC,IAAD,CACEP,KAAK,OACLP,WAAW,UACXiB,aAAa,oBACbL,MAAM,QAJR,iBASF,cAAC,IAAD,CAAQE,YAAa,EAArB,SACE,cAAC,IAAD,CACEP,KAAK,OACLP,WAAW,UACXiB,aAAa,oBACbL,MAAM,QAJR,uBAUJ,eAAC,IAAD,CACEZ,WAAW,UACXkB,UAAU,6CACVC,aAAc,GACdL,YAAa,CAAEV,KAAM,QACrBW,WAAY,CAAEX,KAAM,QACpBgB,WAAY,GACZC,YAAa,CAAEjB,KAAM,GAAIC,GAAI,IAC7BiB,aAAc,CAAElB,KAAM,GAAIC,GAAI,IAC9BkB,cAAe,CAAEnB,KAAM,GAAIC,GAAI,IAC/BH,SAAS,WACTc,MAAO,CAAEZ,KAAM,MAAOC,GAAI,UAC1BI,KAAM,EACNC,MAAO,EACPF,IAAK,IAdP,UAgBE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEX,QAAS,CACPO,KAAM,UACNC,GAAI,QAHR,UAME,eAAC,IAAD,CACEmB,KAAM,EACNV,YAAa,CACXV,KAAM,EACNC,GAAI,GAENoB,aAAc,CACZrB,KAAM,GACNC,GAAI,GARR,UAWE,eAAC,IAAD,CAAaqB,GAAG,SAAhB,UACE,cAAC,IAAD,CAAWC,WAAW,OAAtB,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACdhB,MAAM,WACNiB,SAAS,UAEX,cAAC,IAAD,CACEC,SA/KI,SAACjD,GACzBJ,EAAS,IACTR,EAAUY,EAAEkD,OAAOC,OACnBpD,KA6KoBqD,YAAY,eACZC,UAAW,EACXhB,UAAU,KACViB,UAAQ,UAId,cAAC,IAAD,CAAKvB,MAAM,UAAX,SACGpC,GAAS,cAAC,IAAD,CAAM0B,SAAS,WAAW2B,SAAS,KAAnC,SAAyCrD,SAGvD,eAAC,IAAD,CACEqB,QAAS,CACPO,KAAM,UACNC,GAAI,QAENmB,KAAM,IALR,UAOE,eAAC,IAAD,CACEE,GAAG,OACHZ,YAAa,EACbW,aAAc,CACZrB,KAAM,EACNC,GAAI,GALR,UAQE,cAAC,IAAD,CAAWsB,WAAW,OAAtB,kBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEG,SAjNW,SAACjD,GAAaR,EAAgBQ,EAAEkD,OAAOC,QAkNlDd,UAAU,KACVc,MAAO5D,EAHT,SAKGT,EAAWyE,KAAI,SAACC,EAAqBC,GAAtB,OAAoC,yBAAgBN,MAAOK,EAASzE,KAAhC,UAAuCyE,EAASxE,KAAhD,IAAuDwE,EAASzE,OAAnD0E,aAIvE,cAAC,IAAD,CACEzC,QAAQ,OACRiB,YAAY,IACZyB,WAAW,MACXd,aAAc,CACZrB,KAAM,EACNC,GAAI,GANR,SASE,cAAC,IAAD,UACE,cAAC,IAAD,CACEE,KAAK,OACLiC,GAAG,YACH5B,MAAM,QACN6B,QAAS,kBAxM7BtE,EAAcC,QACdC,EAAgBH,IAwMIwE,OAAQ,CACNC,OAAQ,UACR3C,WAAY,WAPhB,SAUE,cAAC,IAAD,UAIN,eAAC,IAAD,CAAa0B,GAAG,KAAhB,UACE,cAAC,IAAD,CAAWC,WAAW,OAAtB,gBACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEG,SAnPS,SAACjD,GAAaV,EAAcU,EAAEkD,OAAOC,QAoP9Cd,UAAU,KACVc,MAAO9D,EAHT,SAKGP,EAAWyE,KAAI,SAACC,EAAqBC,GAAtB,OAAoC,yBAAgBN,MAAOK,EAASzE,KAAhC,UAAuCyE,EAASxE,KAAhD,IAAuDwE,EAASzE,OAAnD0E,uBAQ/E,cAAC,IAAD,CAASnC,UAAU,IAAIsB,aAAa,MA5NxC,eAAC,IAAD,WACE,eAAC,IAAD,CAAKA,aAAa,IAAlB,UACE,cAAC,IAAD,CAAKb,MAAM,WAAX,SACE,eAAC,IAAD,CACEe,WAAW,OACXF,aAAa,IAFf,UAGEzD,EAHF,IAGWiB,EAAkBb,GAAc,IAAU,kBAHrD,WAKF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMuD,WAAW,OAAOE,SAAS,KAAjC,UAAuCvD,GAAsBsE,KAAKC,MAAMvE,EAAsBN,EAA+B,KAAO,IAApI,IAA0IiB,EAAkBf,GAAY,IAAU,qBAGtL,cAAC,IAAD,CAAK0C,MAAM,WAAWiB,SAAS,KAA/B,SACE,8BAAI,EAAJ,IAAQ5C,EAAkBb,GAAc,GAAxC,MAAkDE,EAAlD,IAAuEW,EAAkBf,GAAY,IAAS,iBAEhH,cAAC,IAAD,CAAK0C,MAAM,WAAWiB,SAAS,KAA/B,SACE,8BAAIvD,EAAJ,IAAyBW,EAAkBf,GAAY,GAAvD,MAAiE,EAAjE,IAAqEe,EAAkBb,GAAc,IAAS,oCEhFpG0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACtF,GACNc,QAAQd,MAAMA,EAAMuF,c","file":"static/js/main.097a1b61.chunk.js","sourcesContent":["export interface ICurrency {\n    name: string\n    flag: string\n}\n\nconst currencies: ICurrency[] = [\n    { name: \"AED - Emirati Dirham\", flag: \"🇦🇪\" },\n    { name: \"AFN - Afghan Afghani\", flag: \"🇦🇫\" },\n    { name: \"ALL - Albanian Lek\", flag: \"🇦🇱\" },\n    { name: \"AMD - Armenian Dram\", flag: \"🇦🇲\" },\n    { name: \"AOA - Angolian Kwanza\", flag: \"🇦🇴\" },\n    { name: \"ARS - Argentine Peso\", flag: \"🇦🇷\" },\n    { name: \"AUD - Australian Dollar\", flag: \"🇦🇺\" },\n    { name: \"AWG - Aruban\", flag: \"🇦🇼\" },\n    { name: \"AZN - Azerbaijan Manats\", flag: \"🇦🇿\" },\n    { name: \"BAM - Bosnian Convertible Mark\", flag: \"🇧🇦\" },\n    { name: \"BBD - Barbadian Dollar\", flag: \"🇧🇧\" },\n    { name: \"BDT - Bangladeshi Taka\", flag: \"🇧🇩\" },\n    { name: \"BGN - Bulgarian Leva\", flag: \"🇧🇬\" },\n    { name: \"BHD - Bahraini Dinar\", flag: \"🇧🇭\" },\n    { name: \"BIF - Burundian Franc\", flag: \"🇧🇮\" },\n    { name: \"BMD - Bermudian Dollar\", flag: \"🇧🇲\" },\n    { name: \"BND - Bruneian Dollar\", flag: \"🇧🇳\" },\n    { name: \"BOB - Bolivian Bolíviano\", flag: \"🇧🇴\" },\n    { name: \"BRL - Brazilian Real\", flag: \"🇧🇷\" },\n    { name: \"BSD - Bahamian Dollar\", flag: \"🇧🇸\" },\n    { name: \"BTN - Bhutanese Ngultrum\", flag: \"🇧🇹\" },\n    { name: \"BWP - Botswana Pula\", flag: \"🇧🇼\" },\n    { name: \"BYN - Belarusian Ruble\", flag: \"🇧🇾\" },\n    { name: \"BZD - Belizean Dollar\", flag: \"🇧🇿\" },\n    { name: \"CAD - Canadian Dollar\", flag: \"🇨🇦\" },\n    { name: \"CDF - Congolese Franc\", flag: \"🇨🇩\" },\n    { name: \"CHF - Swiss Franc\", flag: \"🇨🇭\" },\n    { name: \"CLP - Chilean Peso\", flag: \"🇨🇱\" },\n    { name: \"CNY - Chinese Yuan Renminbi\", flag: \"🇨🇳\" },\n    { name: \"COP - Colombian Peso\", flag: \"🇨🇴\" },\n    { name: \"CRC - Costa Rican Colon\", flag: \"🇨🇷\" },\n    { name: \"CUC - Cuban Convertible Peso\", flag: \"🇨🇺\" },\n    { name: \"CUP - Cuban Peso\", flag: \"🇨🇺\" },\n    { name: \"CVE - Cape Verdean Escudo\", flag: \"🇨🇻\" },\n    { name: \"CZK - Czech Koruna\", flag: \"🇨🇿\" },\n    { name: \"DJF - Djiboutian Franc\", flag: \"🇩🇯\" },\n    { name: \"DKK - Danish Krone\", flag: \"🇩🇰\" },\n    { name: \"DOP - Dominican Peso\", flag: \"🇩🇴\" },\n    { name: \"DZD - Algerian Dinar\", flag: \"🇩🇿\" },\n    { name: \"EGP - Egyptian Pound\", flag: \"🇪🇬\" },\n    { name: \"ERN - Eritrean Nakfa\", flag: \"🇪🇷\" },\n    { name: \"ETB - Ethiopian Birr\", flag: \"🇪🇹\" },\n    { name: \"EUR - Euro\", flag: \"🇪🇺\" },\n    { name: \"FJD - Fijian Dollar\", flag: \"🇫🇯\" },\n    { name: \"FKP - Falkland Island Pound\", flag: \"🇫🇰\" },\n    { name: \"GBP - British Pound\", flag: \"🇬🇧\" },\n    { name: \"GEL - Georgian Lari\", flag: \"🇬🇪\" },\n    { name: \"GGP - Guernsey Pound\", flag: \"🇬🇬\" },\n    { name: \"GHS - Ghanaian Cedi\", flag: \"🇬🇭\" },\n    { name: \"GIP - Gibraltar Pound\", flag: \"🇬🇮\" },\n    { name: \"GMD - Gambian Dalasi\", flag: \"🇬🇲\" },\n    { name: \"GNF - Guinean Franc\", flag: \"🇬🇳\" },\n    { name: \"GTQ - Guatemalan Quetzal\", flag: \"🇬🇹\" },\n    { name: \"GYD - Guyanese Dollar\", flag: \"🇬🇾\" },\n    { name: \"HKD - Hong Kong Dollar\", flag: \"🇭🇰\" },\n    { name: \"HNL - Honduran Lempira\", flag: \"🇭🇳\" },\n    { name: \"HRK - Croatian Kuna\", flag: \"🇭🇷\" },\n    { name: \"HTG - Haitian Gourde\", flag: \"🇭🇹\" },\n    { name: \"HUF - Hungarian Forint\", flag: \"🇭🇺\" },\n    { name: \"IDR - Indonesian Rupiah\", flag: \"🇮🇩\" },\n    { name: \"ILS - Israeli Shekel\", flag: \"🇮🇱\" },\n    { name: \"IMP - Isle of Man Pound\", flag: \"🇮🇲\" },\n    { name: \"INR - Indian Rupee\", flag: \"🇮🇳\" },\n    { name: \"IQD - Iraqi Dinar\", flag: \"🇮🇶\" },\n    { name: \"IRR - Iranian Rial\", flag: \"🇮🇷\" },\n    { name: \"ISK - Icelandic Krona\", flag: \"🇮🇸\" },\n    { name: \"JMD - Jamaican Dollar\", flag: \"🇯🇲\" },\n    { name: \"JOD - Jordanian Dinar\", flag: \"🇯🇴\" },\n    { name: \"JPY - Japanese Yen\", flag: \"🇯🇵\" },\n    { name: \"KES - Kenyan Shilling\", flag: \"🇰🇪\" },\n    { name: \"KGS - Kyrgyzstani Som\", flag: \"🇰🇬\" },\n    { name: \"KHR - Cambodian Riel\", flag: \"🇰🇭\" },\n    { name: \"KMF - Comorian Franc\", flag: \"🇰🇲\" },\n    { name: \"KRW - South Korean Won\", flag: \"🇰🇷\" },\n    { name: \"KWD - Kuwaiti Dinar\", flag: \"🇰🇼\" },\n    { name: \"KYD - Caymanian Dollar\", flag: \"🇰🇾\" },\n    { name: \"KZT - Kazakhstani Tenge\", flag: \"🇰🇿\" },\n    { name: \"LAK - Lao Kip\", flag: \"🇱🇦\" },\n    { name: \"LBP - Lebanese Pound \", flag: \"🇱🇧\" },\n    { name: \"LKR - Sri Lankan Rupee\", flag: \"🇱🇰\" },\n    { name: \"LRD - Liberian Dollar\", flag: \"🇱🇷\" },\n    { name: \"LSL - Basotho Loti\", flag: \"🇱🇸\" },\n    { name: \"LYD - Libyan Dinar\", flag: \"🇱🇾\" },\n    { name: \"MAD - Moroccan Dirham\", flag: \"🇲🇦\" },\n    { name: \"MDL - Moldovan Leu\", flag: \"🇲🇩\" },\n    { name: \"MGA - Malagasy Ariary\", flag: \"🇲🇬\" },\n    { name: \"MKD - Macedonian Denar\", flag: \"🇲🇰\" },\n    { name: \"MMK - Burmese Kyat\", flag: \"🇲🇲\" },\n    { name: \"MNT - Mongolian Tughrik\", flag: \"🇲🇳\" },\n    { name: \"MRU - Mauritanian Ouguiya\", flag: \"🇲🇷\" },\n    { name: \"MUR - Mauritian Rupee\", flag: \"🇲🇷\" },\n    { name: \"MVR - Maldivian Rufiyaa\", flag: \"🇲🇻\" },\n    { name: \"MWK - Malawian Kwacha\", flag: \"🇲🇼\" },\n    { name: \"MXN - Mexican Peso\", flag: \"🇲🇽\" },\n    { name: \"MYR - Malaysian Ringgit\", flag: \"🇲🇾\" },\n    { name: \"MZN - Mozambican Metical\", flag: \"🇲🇿\" },\n    { name: \"NAD - Namibian Dollar\", flag: \"🇳🇦\" },\n    { name: \"NGN - Nigerian Naira\", flag: \"🇳🇬\" },\n    { name: \"NIO - Nicaraguan Cordoba\", flag: \"🇳🇮\" },\n    { name: \"NOK - Norwegian Krone\", flag: \"🇳🇴\" },\n    { name: \"NPR - Nepalese Rupee\", flag: \"🇳🇵\" },\n    { name: \"NZD - New Zealand Dollar\", flag: \"🇳🇿\" },\n    { name: \"OMR - Omani Rial\", flag: \"🇴🇲\" },\n    { name: \"PAB - Panamanian Balboa\", flag: \"🇵🇦\" },\n    { name: \"PEN - Peruvian Sol\", flag: \"🇵🇪\" },\n    { name: \"PGK - Papua New Guinean Kina\", flag: \"🇵🇬\" },\n    { name: \"PHP - Philippine Peso\", flag: \"🇵🇭\" },\n    { name: \"PKR - Pakistani Rupee\", flag: \"🇵🇰\" },\n    { name: \"PLN - Polish Zloty\", flag: \"🇵🇱\" },\n    { name: \"PYG - Paraguayan Guarani\", flag: \"🇵🇾\" },\n    { name: \"QAR - Qatari Riyal\", flag: \"🇶🇦\" },\n    { name: \"RON - Romanian Leu\", flag: \"🇷🇴\" },\n    { name: \"RSD - Serbian Dinar\", flag: \"🇷🇸\" },\n    { name: \"RUB - Russian Ruble\", flag: \"🇷🇺\" },\n    { name: \"RWF - Rwandan Franc\", flag: \"🇷🇼\" },\n    { name: \"SAR - Saudi Arabian Riyal\", flag: \"🇸🇦\" },\n    { name: \"SBD - Solomon Islander Dollar\", flag: \"🇸🇧\" },\n    { name: \"SCR - Seychellois Rupee\", flag: \"🇸🇨\" },\n    { name: \"SDG - Sudanese Pound\", flag: \"🇸🇩\" },\n    { name: \"SEK - Swedish Krona\", flag: \"🇸🇪\" },\n    { name: \"SGD - Singapore Dollar\", flag: \"🇸🇬\" },\n    { name: \"SLL - Sierra Leonean Leone\", flag: \"🇸🇱\" },\n    { name: \"SOS - Somali Shilling\", flag: \"🇸🇴\" },\n    { name: \"SRD - Surinamese Dollar\", flag: \"🇸🇷\" },\n    { name: \"SSP - Sudanese Pound\", flag: \"🇸🇩\" },\n    { name: \"STN - Sao Tomean Dobra\", flag: \"🇸🇹\" },\n    { name: \"SYP - Syrian Pound\", flag: \"🇸🇾\" },\n    { name: \"SZL - Swazi Lilangeni\", flag: \"🇸🇿\" },\n    { name: \"THB - Thai Baht\", flag: \"🇹🇭\" },\n    { name: \"TJS - Tajikistani Somoni\", flag: \"🇹🇯\" },\n    { name: \"TMT - Turkmenistani Manat\", flag: \"🇹🇲\" },\n    { name: \"TND - Tunisian Dinar\", flag: \"🇹🇳\" },\n    { name: \"TOP - Tongan Pa'anga\", flag: \"🇹🇴\" },\n    { name: \"TRY - Turkish Lira\", flag: \"🇹🇷\" },\n    { name: \"TTD - Trinidadian Dollar\", flag: \"🇹🇹\" },\n    { name: \"TVD - Tuvaluan Dollar\", flag: \"🇹🇻\" },\n    { name: \"TWD - Taiwan New Dollar\", flag: \"🇹🇼\" },\n    { name: \"TZS - Tanzanian Shilling\", flag: \"🇹🇿\" },\n    { name: \"UAH - Ukrainian Hryvnia\", flag: \"🇺🇦\" },\n    { name: \"UGX - Ugandan Shilling\", flag: \"🇺🇬\" },\n    { name: \"USD - US Dollar\", flag: \"🇺🇸\" },\n    { name: \"UYU - Uruguayan Peso\", flag: \"🇺🇾\" },\n    { name: \"UZS - Uzbekistani Som\", flag: \"🇺🇿\" },\n    { name: \"VES - Venezuelan Bolívar\", flag: \"🇻🇪\" },\n    { name: \"VND - Vietnamese Dong\", flag: \"🇻🇳\" },\n    { name: \"VUV - Ni-Vanuatu Vatu\", flag: \"🇻🇺\" },\n    { name: \"WST - Samoan Tala\", flag: \"🇼🇸\" },\n    { name: \"ZAR - South African Rand\", flag: \"🇿🇦\" },\n    { name: \"ZMW - Zambian Kwacha\", flag: \"🇿🇲\" }\n]\n\nexport default currencies;\n","import React, { useEffect, useState } from 'react';\n\nimport { RiArrowLeftRightLine } from 'react-icons/ri';\n\nimport {\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Select,\n  Circle,\n  Center,\n  Box,\n  Text,\n  Divider\n} from \"@chakra-ui/react\"\nimport currencies, { ICurrency } from \"./currencies\";\nimport { BASE_URL } from './const';\n\nfunction App() {\n\n  const [amount, setAmount] = useState<string>(\"\");\n  const [toCurrency, setToCurrency] = useState<string>(\"USD - US Dollar\");\n  const [fromCurrency, setFromCurrency] = useState<string>(\"CAD - Canadian Dollar\");\n  const [currencyConversion, setCurrencyConversion] = useState<number>();\n  const [error, setError] = useState<string>(\"\");\n\n  useEffect(() => {\n    try {\n      validate();\n      getConversion();\n    } catch (e: any) {\n      setError(e);\n      setAmount(\"\");\n    }\n  }, [amount, fromCurrency, toCurrency]);\n\n  const handleFromCurrencyChange = (e: any) => { setFromCurrency(e.target.value) };\n\n  const handleToCurrencyChange = (e: any) => { setToCurrency(e.target.value) };\n\n  const handleInputChange = (e: any) => {\n    setError(\"\");\n    setAmount(e.target.value);\n    getConversion();\n  }\n\n  const getConversion = async () => {\n    try {\n      const req = await fetch(`${BASE_URL}/${process.env.REACT_APP_API_KEY}/latest/${parseSelectOption(fromCurrency, true) || \"CAD\"}`);\n      const res = await req.json();\n      setCurrencyConversion(res.conversion_rates[parseSelectOption(toCurrency, true) || \"USD\"]);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  const parseSelectOption = (val: string, symbol: boolean) => {\n    if (!val) return;\n    return symbol ? val.split(\"-\")[0].trim() : val.split(\"-\")[1].trim();\n  }\n\n  const validate = () => {\n    const regex = /^\\d*\\.?\\d*$/gm.test(amount);\n    if (!regex) { throw 'Please enter a valid amount' }\n  }\n\n  const switchCurrencies = () => {\n    setToCurrency(fromCurrency);\n    setFromCurrency(toCurrency);\n  }\n\n  const displayConversion = () => {\n    return (\n      <Box>\n        <Box marginBottom=\"5\">\n          <Box color=\"gray.500\">\n            <Text\n              fontWeight=\"bold\"\n              marginBottom=\"1\"\n            >{amount} {parseSelectOption(fromCurrency, false) || \"Canadian Dollar\"} = </Text>\n          </Box>\n          <Box>\n            <Text fontWeight=\"bold\" fontSize=\"25\">{currencyConversion && Math.round(currencyConversion * (amount as unknown as number) * 100) / 100} {parseSelectOption(toCurrency, false) || \"US Dollars\"}</Text>\n          </Box>\n        </Box>\n        <Box color=\"gray.500\" fontSize=\"15\">\n          <p>{1} {parseSelectOption(fromCurrency, true)} = {currencyConversion} {parseSelectOption(toCurrency, true) || \"US Dollar\"}</p>\n        </Box>\n        <Box color=\"gray.500\" fontSize=\"15\">\n          <p>{currencyConversion} {parseSelectOption(toCurrency, true)} = {1} {parseSelectOption(fromCurrency, true) || \"Canadian Dollar\"}</p>\n        </Box>\n      </Box>\n    )\n  }\n\n  return (\n    <>\n      <Box\n        display=\"block\"\n        boxSizing=\"border-box\"\n        height=\"50vh\"\n        background=\"linear-gradient(180deg, rgba(2,0,36,1) 0%, rgb(14 212 182) 68%)\"\n        clipPath=\"ellipse(300% 100% at 185% 0%)\"\n      >\n      </Box>\n      <Box\n        position=\"relative\"\n        marginTop={{ base: \"-356px\", md: \"-270\" }}\n      >\n        <Heading\n          as=\"h6\"\n          size=\"md\"\n          position=\"absolute\"\n          top={0}\n          left={0}\n          right={0}\n          textAlign=\"center\"\n          color=\"white\"\n        >CURRENCY CONVERTER</Heading>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          position=\"absolute\"\n          left={0}\n          right={0}\n          top={35}\n          marginRight={{ base: \"auto\" }}\n          marginLeft={{ base: \"auto\" }}\n          width=\"10%\"\n        >\n          <Center marginRight={1}>\n            <Circle\n              size=\"40px\"\n              background=\"#029690\"\n              borderBottom=\"3px solid #076460\"\n              color=\"white\"\n            >\n              &#xA3;\n          </Circle>\n          </Center>\n          <Center marginRight={1}>\n            <Circle\n              size=\"40px\"\n              background=\"#029690\"\n              borderBottom=\"3px solid #076460\"\n              color=\"white\"\n            >\n              &#x20AC;\n          </Circle>\n          </Center>\n          <Center marginRight={1}>\n            <Circle\n              size=\"40px\"\n              background=\"#029690\"\n              borderBottom=\"3px solid #076460\"\n              color=\"white\"\n            >\n              &#x24;\n          </Circle>\n          </Center>\n          <Center marginRight={1}>\n            <Circle\n              size=\"40px\"\n              background=\"#029690\"\n              borderBottom=\"3px solid #076460\"\n              color=\"white\"\n            >\n              &#xa5;\n          </Circle>\n          </Center>\n        </Box>\n        <Box\n          background=\"#ffffff\"\n          boxShadow=\"-1px 12px 26px -8px rgb(255 255 255 / 75%)\"\n          borderRadius={10}\n          marginRight={{ base: \"auto\" }}\n          marginLeft={{ base: \"auto\" }}\n          paddingTop={10}\n          paddingLeft={{ base: 10, md: 20 }}\n          paddingRight={{ base: 10, md: 20 }}\n          paddingBottom={{ base: 10, md: 20 }}\n          position=\"absolute\"\n          width={{ base: \"80%\", md: \"1200px\" }}\n          left={0}\n          right={0}\n          top={117}\n        >\n          <Box>\n            <Box>\n              <Box\n                display={{\n                  base: \"initial\",\n                  md: \"flex\"\n                }}\n              >\n                <Box\n                  flex={1}\n                  marginRight={{\n                    base: 0,\n                    md: 5\n                  }}\n                  marginBottom={{\n                    base: 10,\n                    md: 0\n                  }}\n                >\n                  <FormControl id=\"amount\">\n                    <FormLabel fontWeight=\"bold\">Amount</FormLabel>\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents=\"none\"\n                        color=\"gray.300\"\n                        fontSize=\"1.2em\"\n                      />\n                      <Input\n                        onChange={handleInputChange}\n                        placeholder=\"Enter amount\"\n                        maxLength={8}\n                        boxShadow=\"md\"\n                        required\n                      />\n                    </InputGroup>\n                  </FormControl>\n                  <Box color=\"#b30021\">\n                    {error && <Text position=\"absolute\" fontSize=\"14\">{error}</Text>}\n                  </Box>\n                </Box>\n                <Box\n                  display={{\n                    base: \"initial\",\n                    md: \"flex\"\n                  }}\n                  flex={2.1}\n                >\n                  <FormControl\n                    id=\"from\"\n                    marginRight={5}\n                    marginBottom={{\n                      base: 5,\n                      md: 0\n                    }}\n                  >\n                    <FormLabel fontWeight=\"bold\">From</FormLabel>\n                    <InputGroup>\n                      <Select\n                        onChange={handleFromCurrencyChange}\n                        boxShadow=\"md\"\n                        value={fromCurrency}\n                      >\n                        {currencies.map((currency: ICurrency, i: number) => <option key={i} value={currency.name}>{currency.flag} {currency.name}</option>)}\n                      </Select>\n                    </InputGroup>\n                  </FormControl>\n                  <Box\n                    display=\"flex\"\n                    marginRight=\"5\"\n                    alignItems=\"end\"\n                    marginBottom={{\n                      base: 5,\n                      md: 0\n                    }}\n                  >\n                    <Center>\n                      <Circle\n                        size=\"40px\"\n                        bg=\"cadetBlue\"\n                        color=\"white\"\n                        onClick={() => switchCurrencies()}\n                        _hover={{\n                          cursor: \"pointer\",\n                          background: \"#3c6567\"\n                        }}\n                      >\n                        <RiArrowLeftRightLine />\n                      </Circle>\n                    </Center>\n                  </Box>\n                  <FormControl id=\"to\">\n                    <FormLabel fontWeight=\"bold\">To</FormLabel>\n                    <InputGroup>\n                      <Select\n                        onChange={handleToCurrencyChange}\n                        boxShadow=\"md\"\n                        value={toCurrency}\n                      >\n                        {currencies.map((currency: ICurrency, i: number) => <option key={i} value={currency.name}>{currency.flag} {currency.name}</option>)}\n                      </Select>\n                    </InputGroup>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n          <Divider marginTop=\"8\" marginBottom=\"8\" />\n          {displayConversion()}\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","export const BASE_URL = \"https://v6.exchangerate-api.com/v6\"","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}